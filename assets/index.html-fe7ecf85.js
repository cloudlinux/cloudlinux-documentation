import{_ as s,V as r,n as o,p as d,q as a,C as i,A as n,J as e,a7 as l}from"./framework-3fe18adc.js";const u="/assets/Param-0ee41183.png",c="/assets/Dashboard-d945fd39.png",h="/assets/remove-mod-ruid2-e4f914c5.png",p={},m=a("h1",{id:"features",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#features","aria-hidden":"true"},"#"),e(" Features")],-1),v=a("p",null,"Below you can find the list of supported features with the links to the documentation available.",-1),g=a("h2",{id:"lve-limits",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#lve-limits","aria-hidden":"true"},"#"),e(" LVE limits")],-1),f=a("h2",{id:"inode-limits",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#inode-limits","aria-hidden":"true"},"#"),e(" Inode limits")],-1),_=a("h2",{id:"reseller-limits",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#reseller-limits","aria-hidden":"true"},"#"),e(" Reseller limits")],-1),b=l('<h2 id="mysql-governor" tabindex="-1"><a class="header-anchor" href="#mysql-governor" aria-hidden="true">#</a> MySQL Governor</h2><p>MySQL Governor is software to monitor and restrict MySQL usage in a shared hosting environment. The monitoring is done via resource usage statistics per each MySQL thread.</p><p>MySQL Governor can also kill off slow SELECT queries.</p><p>MySQL Governor has multiple modes of operations, depending on the configuration. It can work in monitor-only mode, or it can use different throttling scenarios.</p><p>MySQL Governor allows restricting customers who use too many resources. It supports following limits:</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>CPU</td><td>%</td><td>CPU speed relative to one core. 150% would mean one and a half cores</td></tr><tr><td>READ</td><td>bytes</td><td>bytes read. Cached reads are not counted, only those that were actually read from disk will be counted</td></tr><tr><td>WRITE</td><td>bytes</td><td>bytes written. Cached writes are not counted, only once data is written to disk, it is counted</td></tr></tbody></table>',6),x=l(`<p>When a customer is restricted, the customer will be placed into special LVE with ID 3. All restricted customers will be placed into that LVE, and you can control the amount of resources available to restricted customers. Restricted customers will also be limited to only 30 concurrent connections. This is done so they wouldn&#39;t use up all the MySQL connections to the server.</p><h3 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h3><div class="warning custom-block"><p class="custom-block-title">Attention!</p><p>MySQL Governor on Ubuntu supports the following only:</p><ul><li>cl-MySQL80 on non-panel system</li><li>cl-MySQL80 on cPanel</li><li>cl-MariaDB103 on non-panel system</li></ul></div><ol><li>Install MySQL Governor</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>apt  install governor-mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li><p>To use MySQL Governor with</p><ul><li>cl-MariaDB103</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/usr/share/lve/dbgovernor/mysqlgovernor.py --mysql-version=mariadb103
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>cl-MySQL80</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/usr/share/lve/dbgovernor/mysqlgovernor.py --mysql-version=mysql80
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Backup your databases.</p></li><li><p>Run the cl-MySQL/cl-MariaDB installation.</p></li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/usr/share/lve/dbgovernor/mysqlgovernor.py --install --yes
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>In case of installing on cPanel + Ubuntu server, set the following parameter:</p><p><img src="`+u+'" alt=""></p>',9),y={start:"5"},w=a("li",null,[e("After installation, check that the database server is working properly. If you have any problems, use "),a("a",{href:""},"Support Portal"),e(".")],-1),k=l(`<p>In case a non-panel system the <code>/etc/container/dbuser-map</code> should be created and updated with new users by admin.</p><p>The format is as follows:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[dbuser_name1] [account_name1] [UID1]
...
[dbuser_nameN] [account_nameN] [UIDN]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The control panel should automatically generate such mapping and write it to the <code>/etc/container/dbuser-map</code>. Usually, it is enough to write a hook when adding, deleting or renaming a database for a user. The control panel should implement such a mechanism for MySQL Governor to operate properly. MySQL Governor automatically applies changes from the dbuser-map file every five minutes.</p>`,4),L={start:"7"},S=a("li",null,[e("Having configured the mapping use "),a("code",null,"dbtop"),e(" to see the current user load on the database (you'd need to make some database queries).")],-1),P=l(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dbtop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="10"><li>If the load appears in the dbtop output, then you have successfully configured MySQL Governor.</li></ol><h3 id="how-to-upgrade-database-server" tabindex="-1"><a class="header-anchor" href="#how-to-upgrade-database-server" aria-hidden="true">#</a> How To upgrade database server</h3>`,3),M=l(`<h3 id="uninstalling" tabindex="-1"><a class="header-anchor" href="#uninstalling" aria-hidden="true">#</a> Uninstalling</h3><p>To remove MySQL Governor, run the following command:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/usr/share/lve/dbgovernor/mysqlgovernor.py --delete
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The script will install the original MySQL server, and remove MySQL Governor.</p><h3 id="configuration-and-operation" tabindex="-1"><a class="header-anchor" href="#configuration-and-operation" aria-hidden="true">#</a> Configuration and operation</h3>`,5),C=a("h2",{id:"administrator-web-interface-cloudlinux-manager",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#administrator-web-interface-cloudlinux-manager","aria-hidden":"true"},"#"),e(" Administrator WEB interface (CloudLinux Manager)")],-1),T=a("h3",{id:"dashboard",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#dashboard","aria-hidden":"true"},"#"),e(" Dashboard")],-1),I=a("p",null,"Dashboard provides a quick overview of statistics and all administrative information for server administrators.",-1),E=a("p",null,[e("Go to "),a("em",null,"CloudLinux Manager"),e(" | "),a("em",null,"Dashboard"),e(".")],-1),U=a("p",null,[a("img",{src:c,alt:""})],-1),q=a("li",null,"End Users hitting limits — number of users reaching their limit in any kind of resource. Data is within the last 24 hours.",-1),Q=a("li",null,"Resellers hitting limits — number of enrolled Resellers that are reaching their limit in any kind of resource. Data is within the last 24 hours.",-1),A=a("em",null,"Manage",-1),G=a("ul",null,[a("li",null,[e("CageFS status (Enabled/Disabled/Not installed). To manage CageFS, click "),a("em",null,"Manage"),e(". You will be redirected to CloudLinux Manager | Options | CageFS. Click "),a("em",null,"Install"),e(" to install CageFS.")]),a("li",null,"Mode displays the current CageFS mode of operation."),a("li",null,"End users — displays the number of users with CageFS enabled/all.")],-1),V=a("h2",{id:"reseller-web-interface-cloudlinux-manager",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#reseller-web-interface-cloudlinux-manager","aria-hidden":"true"},"#"),e(" Reseller WEB interface (CloudLinux Manager)")],-1),D=a("h2",{id:"user-web-interface",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#user-web-interface","aria-hidden":"true"},"#"),e(" User WEB interface")],-1),H=a("h2",{id:"lve-wrappers",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#lve-wrappers","aria-hidden":"true"},"#"),e(" LVE Wrappers")],-1),B=a("ul",null,[a("li",null,"lve_wrapper"),a("li",null,"lve_suwrapper")],-1),R=a("h2",{id:"cagefs-and-running-commands-inside",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#cagefs-and-running-commands-inside","aria-hidden":"true"},"#"),e(" CageFS and running commands inside")],-1),N=l('<ul><li>cagefs_enter</li><li>cagefs_enter_user</li></ul><h2 id="hardened-php" tabindex="-1"><a class="header-anchor" href="#hardened-php" aria-hidden="true">#</a> Hardened PHP</h2><ul><li>alt-php versions 5.5 - 8.2</li></ul><h2 id="mod-hostinglimits" tabindex="-1"><a class="header-anchor" href="#mod-hostinglimits" aria-hidden="true">#</a> Mod_hostinglimits</h2><p>LVE is a kernel level technology developed by the CloudLinux team. The technology has common roots with container based virtualization and uses cgroups in its latest incarnation. It is lightweight and transparent. The goal of LVE is to make sure that no single web site can bring down your web server.</p><p>Today, a single site can consume all CPU, IO, Memory resources or Apache processes - and bring the server to a halt. LVE prevents that. It is done via collaboration of Apache module, PAM module and kernel.</p>',6),F=l(`<ul><li>detects VirtualHost from which the request came;</li><li>detects if it was meant for CGI or PHP script;</li><li>puts Apache process used to serve that request into LVE for the user determined via SuexecUserGroup directive for that virtual host;</li><li>lets Apache to serve the request;</li><li>removes Apache process from user&#39;s LVE.</li></ul><p>The kernel makes sure that all LVEs get fair share of the server&#39;s resources, and that no customer can use more then the limits set for that customer. Today we can limit CPU , Memory (virtual and physical), IO, number of processes as well as the number of entry processes (concurrent connections to apache).</p><p>Each LVE limits amount of entry processes (Apache processes entering into LVE) to prevent single site exhausting all Apache processes. If the limit is reached, then mod_hostinglimits will not be able to place Apache process into LVE, and will return error code 508. This way very heavy site would slow down and start returning 508 errors, without affecting other users.</p><ul><li>If the site is limited by CPU or IO, then the site will start responding slower.</li><li>If the site is limited by memory or number of processes limits, then the user will receive 500 or 503 errors that server cannot execute the script.</li></ul><h4 id="ea-php81-with-php-fpm" tabindex="-1"><a class="header-anchor" href="#ea-php81-with-php-fpm" aria-hidden="true">#</a> ea-php81 with php-fpm</h4><p>To install, run the following command:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>apt install ea-php81*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="alt-php-with-suphp-cgi" tabindex="-1"><a class="header-anchor" href="#alt-php-with-suphp-cgi" aria-hidden="true">#</a> alt-php with suphp, cgi</h4><p>To install, follow these steps:</p><ol><li><p>Remove <code>mod-ruid2</code>:</p><p><img src="`+h+`" alt=""></p></li><li><p>Install packages (with <code>alt-php74</code> as an example):</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>apt install ea-apache24-mod-suphp ea-apache24-mod-suexec
apt install alt-php74
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h4 id="php-selector-installation-instructions" tabindex="-1"><a class="header-anchor" href="#php-selector-installation-instructions" aria-hidden="true">#</a> PHP Selector installation instructions</h4>`,11),O=l(`<p>To install, run the following commands:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>apt install ea-apache24-mod-suphp ea-apache24-mod-suexec
apt install cagefs
cagefsctl –-init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="symlink-owner-match-protection" tabindex="-1"><a class="header-anchor" href="#symlink-owner-match-protection" aria-hidden="true">#</a> Symlink owner match protection</h2>`,3),W=a("h2",{id:"link-traversal-protection",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#link-traversal-protection","aria-hidden":"true"},"#"),e(" Link traversal protection")],-1),Y=a("h2",{id:"tuned-profiles",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#tuned-profiles","aria-hidden":"true"},"#"),e(" Tuned profiles")],-1),z=a("h2",{id:"apache-mod-lsapi",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#apache-mod-lsapi","aria-hidden":"true"},"#"),e(" Apache mod_lsapi")],-1),J=a("h3",{id:"general-requirements",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#general-requirements","aria-hidden":"true"},"#"),e(" General requirements")],-1),j=l(`<h3 id="installation-1" tabindex="-1"><a class="header-anchor" href="#installation-1" aria-hidden="true">#</a> Installation</h3><p>Installation on cPanel servers with EasyApache 4:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>apt install liblsapi liblsapi-dev 
apt install ea-apache24-mod-lsapi
/usr/bin/switch_mod_lsapi --setup
service httpd restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Installation on servers with no panel:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>apt install liblsapi liblsapi-dev 
apt install mod-lsapi
/usr/bin/switch_mod_lsapi --setup
service apache2 restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h3>`,6),K=l(`<h3 id="troubleshooting" tabindex="-1"><a class="header-anchor" href="#troubleshooting" aria-hidden="true">#</a> Troubleshooting</h3><p>In case the site responds with the error: 503 Service unavailable.</p><ol><li>Be sure that /opt has drwxr-xr-x permissions. It can be fixed with the following command:</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>chmod 755 /opt 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>Change the default folder for mod_lsapi socket:</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mkdir /var/mod_lsapi
chown nobody.nobody /var/mod_lsapi
chmod 755 /var/mod_lsapi
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Add to /etc/apache2/conf.d/lsapi.conf new path:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>lsapi_socket_path /var/mod_lsapi
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>And restart service:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>service httpd restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="uninstall" tabindex="-1"><a class="header-anchor" href="#uninstall" aria-hidden="true">#</a> Uninstall</h3><p>Uninstall procedure for cPanel servers with EasyApache 4:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/usr/bin/switch_mod_lsapi --uninstall
apt remove liblsapi liblsapi-dev ea-apache24-mod-lsapi
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Uninstall procedure for servers with no panel:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/usr/bin/switch_mod_lsapi --uninstall
apt remove liblsapi liblsapi-dev mod-lsapi
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,15);function X(Z,$){const t=r("RouterLink");return o(),d("div",null,[m,v,g,a("ul",null,[a("li",null,[i(t,{to:"/shared/limits/#understanding-limits"},{default:n(()=>[e("Understanding limits")]),_:1})]),a("li",null,[i(t,{to:"/shared/limits/#speed-limit"},{default:n(()=>[e("SPEED limit")]),_:1})]),a("li",null,[i(t,{to:"/shared/limits/#memory-limit"},{default:n(()=>[e("Memory limit")]),_:1})]),a("li",null,[i(t,{to:"/shared/limits/#io"},{default:n(()=>[e("IO")]),_:1})]),a("li",null,[i(t,{to:"/shared/limits/#iops"},{default:n(()=>[e("IOPS")]),_:1})]),a("li",null,[i(t,{to:"/shared/limits/#entry-processes"},{default:n(()=>[e("Entry processes")]),_:1})]),a("li",null,[i(t,{to:"/shared/limits/#number-of-processes"},{default:n(()=>[e("Number of processes")]),_:1})]),a("li",null,[i(t,{to:"/shared/limits/#inodes"},{default:n(()=>[e("Inodes")]),_:1})]),a("li",null,[i(t,{to:"/shared/limits/#network-traffic-bandwidth-control-and-accounting-system"},{default:n(()=>[e("Network traffic bandwidth control and accounting system")]),_:1})]),a("li",null,[i(t,{to:"/shared/limits/#limits-validation"},{default:n(()=>[e("Limits validation")]),_:1})]),a("li",null,[i(t,{to:"/shared/limits/#compatibility-matrix"},{default:n(()=>[e("Compatibility matrix")]),_:1})]),a("li",null,[i(t,{to:"/shared/limits/#reseller-limits"},{default:n(()=>[e("Reseller limits")]),_:1})])]),f,a("p",null,[e("The documentation is available "),i(t,{to:"/shared/limits/#inodes"},{default:n(()=>[e("here")]),_:1}),e(".")]),_,a("p",null,[e("The documentation is available "),i(t,{to:"/shared/limits/#reseller-limits"},{default:n(()=>[e("here")]),_:1}),e(".")]),b,a("p",null,[e("You can set different limits for different periods: current, short, med, long. By default those periods are defined as 1 second, 5 seconds, 1 minute and 5 minutes. They can be re-defined using the "),i(t,{to:"/shared/cloudlinux_os_components/#configuration-and-operation"},{default:n(()=>[e("configuration file")]),_:1}),e(". The idea is to use larger acceptable values for shorter periods. Like you could allow a customer to use two cores (200%) for one second, but only 1 core (on average) for 1 minute, and only 70% within 5 minutes. That would make sure that customer can burst for short periods of time.")]),x,a("ol",y,[w,a("li",null,[e("Configure user mapping to the database. The mapping format is described in the "),i(t,{to:"/shared/cloudlinux_os_components/#mapping-a-user-to-a-database"},{default:n(()=>[e("following section")]),_:1}),e(".")])]),k,a("ol",L,[a("li",null,[e("MySQL Governor configuration can be found in the following "),i(t,{to:"/shared/cloudlinux_os_components/#configuration-3"},{default:n(()=>[e("section")]),_:1}),e(".")]),a("li",null,[e("MySQL Governor CLI tools description can be found in the following "),i(t,{to:"/shared/command-line_tools/#mysql-governor"},{default:n(()=>[e("section")]),_:1}),e(".")]),S]),P,a("p",null,[e("You can find the instructions in "),i(t,{to:"/shared/cloudlinux_os_components/#upgrading-database-server"},{default:n(()=>[e("this documentation")]),_:1}),e(".")]),M,a("p",null,[e("You can find the instructions in "),i(t,{to:"/shared/cloudlinux_os_components/#configuration-and-operation"},{default:n(()=>[e("this documentation")]),_:1}),e(".")]),C,a("p",null,[e("The documentation is available "),i(t,{to:"/shared/lve_manager/#cloudlinux-manager"},{default:n(()=>[e("here")]),_:1}),e(".")]),a("ul",null,[a("li",null,[i(t,{to:"/sub-system-ubuntu/features/#dashboard"},{default:n(()=>[e("Dashboard")]),_:1})]),a("li",null,[i(t,{to:"/shared/lve_manager/#current-usage"},{default:n(()=>[e("Current Usage")]),_:1})]),a("li",null,[i(t,{to:"/shared/lve_manager/#users"},{default:n(()=>[e("Users")]),_:1})]),a("li",null,[i(t,{to:"/shared/lve_manager/#statistics"},{default:n(()=>[e("Statistics")]),_:1})]),a("li",null,[i(t,{to:"/shared/lve_manager/#packages"},{default:n(()=>[e("Packages")]),_:1})]),a("li",null,[i(t,{to:"/shared/lve_manager/#options"},{default:n(()=>[e("Options")]),_:1})]),a("li",null,[i(t,{to:"/shared/cloudlinux_os_components/#php-selector"},{default:n(()=>[e("PHP Selector")]),_:1}),a("ul",null,[a("li",null,[i(t,{to:"/features/#php-selector-installation-instructions"},{default:n(()=>[e("Installation instructions")]),_:1})]),a("li",null,[i(t,{to:"/shared/lve_manager/#selector-tab"},{default:n(()=>[e("Selector tab")]),_:1})]),a("li",null,[i(t,{to:"/shared/lve_manager/#selector-tab-additional-features"},{default:n(()=>[e("Selector tab additional features (cPanel)")]),_:1}),e(" CloudLinux Manager 6.0.1-2")]),a("li",null,[i(t,{to:"/shared/lve_manager/#php-selector-troubleshooting"},{default:n(()=>[e("PHP Selector troubleshooting (cPanel)")]),_:1}),e(" CloudLinux Manager 6.0.1-2")]),a("li",null,[i(t,{to:"/shared/lve_manager/#php-selector-diagnostic-tool-and-notifications"},{default:n(()=>[e("PHP Selector diagnostic tool and notifications")]),_:1}),e(" CloudLinux Manager 6.0.1-2")])])])]),T,I,E,U,a("ul",null,[q,Q,a("li",null,[i(t,{to:"/shared/lve_manager/#php-selector-2"},{default:n(()=>[e("PHP Selector")]),_:1}),e(" block displays the following information: "),a("ul",null,[a("li",null,[e("Default version — the default version of PHP binaries. Click "),A,e(" to change the default version, enable or disable PHP Selector, change the list of supported versions, and choose default modules. You will be redirected to CloudLinux Manager | PHP Selector. PHP Selector (cPanel) has malfunctions warnings about "),i(t,{to:"/shared/lve_manager/#errors"},{default:n(()=>[e("the most common issues")]),_:1}),e(".")])])]),a("li",null,[i(t,{to:"/shared/cloudlinux_os_components/#cagefs"},{default:n(()=>[e("CageFS")]),_:1}),e(" block displays the following information: "),G])]),V,a("ul",null,[a("li",null,[i(t,{to:"/shared/lve_manager/#current-usage-tab"},{default:n(()=>[e("Current Usage")]),_:1})]),a("li",null,[i(t,{to:"/shared/lve_manager/#historical-usage-tab"},{default:n(()=>[e("Historical Usage")]),_:1})]),a("li",null,[i(t,{to:"/shared/lve_manager/#users-tab"},{default:n(()=>[e("Users")]),_:1})]),a("li",null,[i(t,{to:"/shared/lve_manager/#statistics-tab"},{default:n(()=>[e("Statistics")]),_:1})]),a("li",null,[i(t,{to:"/shared/lve_manager/#packages-tab"},{default:n(()=>[e("Packages")]),_:1})])]),D,a("ul",null,[a("li",null,[i(t,{to:"/shared/lve_manager/#resource-usage-client-plugin"},{default:n(()=>[e("Resource Usage")]),_:1})]),a("li",null,[i(t,{to:"/shared/lve_manager/#php-selector-client-plugin"},{default:n(()=>[e("PHP Selector")]),_:1})])]),H,a("p",null,[e("The documentation is available "),i(t,{to:"/shared/cloudlinux_os_components/#lve-wrappers"},{default:n(()=>[e("here")]),_:1}),e(".")]),B,R,a("p",null,[e("The documentation is available "),i(t,{to:"/shared/control_panel_integration/#running-commands-inside-cagefs"},{default:n(()=>[e("here")]),_:1}),e(".")]),N,a("p",null,[i(t,{to:"/shared/cloudlinux_os_components/#hostinglimits-module-for-apache"},{default:n(()=>[e("mod_hostinglimits")]),_:1}),e(" is an Apache module that:")]),F,a("p",null,[e("The documentation is available "),i(t,{to:"/shared/cloudlinux_os_components/#php-selector"},{default:n(()=>[e("here")]),_:1}),e(".")]),O,a("p",null,[e("The documentation is available "),i(t,{to:"/shared/cloudlinux_os_kernel/#fs-enforce-symlinksifowner"},{default:n(()=>[e("here")]),_:1}),e(".")]),a("ul",null,[a("li",null,[i(t,{to:"/shared/cloudlinux_os_kernel/#fs-enforce-symlinksifowner"},{default:n(()=>[e("fs.enforce_symlinksifowner")]),_:1})]),a("li",null,[i(t,{to:"/shared/cloudlinux_os_kernel/#fs-symlinkown-gid"},{default:n(()=>[e("fs.symlinkown_gid")]),_:1})]),a("li",null,[i(t,{to:"/shared/cloudlinux_os_kernel/#fs-process-symlinks-by-task"},{default:n(()=>[e("fs.process_symlinks_by_task")]),_:1})])]),W,a("ul",null,[a("li",null,[i(t,{to:"/shared/cloudlinux_os_kernel/#link-traversal-protection"},{default:n(()=>[e("fs.protected_symlinks_create")]),_:1})]),a("li",null,[i(t,{to:"/shared/cloudlinux_os_kernel/#link-traversal-protection"},{default:n(()=>[e("fs.protected_hardlinks_create")]),_:1})])]),Y,a("p",null,[e("The documentation is available "),i(t,{to:"/shared/cloudlinux_os_kernel/#tuned-profiles-cloudlinux"},{default:n(()=>[e("here")]),_:1}),e(".")]),z,J,a("p",null,[e("General requirements are available "),i(t,{to:"/shared/cloudlinux_os_components/#general-information-and-requirements-9"},{default:n(()=>[e("here")]),_:1}),e(".")]),j,a("p",null,[e("Configuration instructions are available "),i(t,{to:"/shared/cloudlinux_os_components/#configuration-4"},{default:n(()=>[e("here")]),_:1}),e(".")]),K])}const ae=s(p,[["render",X],["__file","index.html.vue"]]);export{ae as default};
